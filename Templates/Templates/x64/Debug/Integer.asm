; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30148.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__37A25909_vcruntime_new@h DB 01H
__741AE07E_corecrt_math@h DB 01H
__B49664B7_stdlib@h DB 01H
__61E7EE7E_cstdlib DB 01H
__2555D848_cmath DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__1FEB9909_corecrt_memcpy_s@h DB 01H
__A751F051_corecrt_memory@h DB 01H
__9200769A_corecrt_wstring@h DB 01H
__32E5F013_string@h DB 01H
__C6E16F6F_corecrt_wconio@h DB 01H
__6D390390_corecrt_wio@h DB 01H
__1157D6BA_corecrt_wtime@h DB 01H
__1DC1E279_stat@h DB 01H
__93DC0B45_wchar@h DB 01H
__025FCB46_type_traits DB 01H
__380C1B6C_xutility DB 01H
__20BB4341_malloc@h DB 01H
__9922F748_vcruntime_exception@h DB 01H
__F202CFCE_exception DB 01H
__0DA77A2F_limits DB 01H
__3C7F0836_xmemory DB 01H
__48AC8EAA_xstring DB 01H
__7B4CF593_stdexcept DB 01H
__77E46A11_xcall_once@h DB 01H
__A0B61CF9_time@h DB 01H
__1804055E_xthreads@h DB 01H
__669226ED_atomic DB 01H
__C8B97831_system_error DB 01H
__3FA95DB0_vcruntime_typeinfo@h DB 01H
__48D3E875_typeinfo DB 01H
__B10976A1_memory DB 01H
__9D4C21AE_xfacet DB 01H
__B2D2BA86_ctype@h DB 01H
__575A0BBD_xlocinfo DB 01H
__9792FA9B_xlocale DB 01H
__6EBF7CAE_xiosbase DB 01H
__09159C8C_xlocnum DB 01H
__73A18209_ios DB 01H
__C74056CF_Integer@h DB 01H
__BD051F2B_Integer@cpp DB 01H
__E7521565_istream DB 01H
__8482205F_ostream DB 01H
__79EC4D2F_streambuf DB 01H
__29A0AC2C_iterator DB 01H
__C14EAFA9_iosfwd DB 01H
__56EA6BF5_utility DB 01H
__A1F5FCE7_xstddef DB 01H
__F80E4318_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0Integer@@QEAA@XZ				; Integer::Integer
PUBLIC	??0Integer@@QEAA@AEBV0@@Z			; Integer::Integer
PUBLIC	??0Integer@@QEAA@H@Z				; Integer::Integer
PUBLIC	??0Integer@@QEAA@$$QEAV0@@Z			; Integer::Integer
PUBLIC	?GetValue@Integer@@QEBAHXZ			; Integer::GetValue
PUBLIC	?SetValue@Integer@@QEAAXH@Z			; Integer::SetValue
PUBLIC	??HInteger@@QEBA?AV0@AEBV0@@Z			; Integer::operator+
PUBLIC	??EInteger@@QEAAAEAV0@XZ			; Integer::operator++
PUBLIC	??EInteger@@QEBA?AV0@H@Z			; Integer::operator++
PUBLIC	??4Integer@@QEAAAEAV0@AEBV0@@Z			; Integer::operator=
PUBLIC	??4Integer@@QEAAAEAV0@$$QEAV0@@Z		; Integer::operator=
PUBLIC	??1Integer@@QEAA@XZ				; Integer::~Integer
PUBLIC	??RInteger@@QEAAXXZ				; Integer::operator()
PUBLIC	??BInteger@@QEAAHXZ				; Integer::operator int
PUBLIC	?__autoclassinit2@Integer@@QEAAX_K@Z		; Integer::__autoclassinit2
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_09OMOCDKIG@Integer?$CI?$CJ@		; `string'
PUBLIC	??_C@_0BK@MDJAHKMH@Integer?$CIconst?5Integer?$CG?5i?$CJ@ ; `string'
PUBLIC	??_C@_0BD@PPMNOCDI@Integer?$CIint?5value?$CJ@	; `string'
PUBLIC	??_C@_0M@ILDALPHC@Integer?$CI?$CG?$CG?$CJ@	; `string'
PUBLIC	??_C@_03BNDBBBDF@b?5?$DN@			; `string'
PUBLIC	??_C@_0M@LHGHPBKD@op?$CL?5?3?3?5a?5?$DN?5@	; `string'
PUBLIC	??_C@_0BP@MFPFMONE@Integer?3?3operator?$DN?$CIInteger?$CG?5a?$CJ@ ; `string'
PUBLIC	??_C@_0CA@BHFMGKGI@Integer?3?3operator?$DN?$CIInteger?$CG?$CG?5a?$CJ@ ; `string'
PUBLIC	??_C@_0L@MILLJKOJ@?$HOInteger?$CI?$CJ@		; `string'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	strlen:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Integer@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+167
	DD	imagerel $unwind$??0Integer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Integer@@QEAA@AEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+180
	DD	imagerel $unwind$??0Integer@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Integer@@QEAA@H@Z DD imagerel $LN5
	DD	imagerel $LN5+173
	DD	imagerel $unwind$??0Integer@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Integer@@QEAA@$$QEAV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$??0Integer@@QEAA@$$QEAV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetValue@Integer@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?GetValue@Integer@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetValue@Integer@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$?SetValue@Integer@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??HInteger@@QEBA?AV0@AEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+241
	DD	imagerel $unwind$??HInteger@@QEBA?AV0@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??EInteger@@QEAAAEAV0@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??EInteger@@QEAAAEAV0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??EInteger@@QEBA?AV0@H@Z DD imagerel $LN6
	DD	imagerel $LN6+243
	DD	imagerel $unwind$??EInteger@@QEBA?AV0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4Integer@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN6
	DD	imagerel $LN6+230
	DD	imagerel $unwind$??4Integer@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4Integer@@QEAAAEAV0@$$QEAV0@@Z DD imagerel $LN4
	DD	imagerel $LN4+172
	DD	imagerel $unwind$??4Integer@@QEAAAEAV0@$$QEAV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Integer@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??1Integer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RInteger@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??RInteger@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BInteger@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??BInteger@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@Integer@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@Integer@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1036
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+148
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+261
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+116
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0L@MILLJKOJ@?$HOInteger?$CI?$CJ@
CONST	SEGMENT
??_C@_0L@MILLJKOJ@?$HOInteger?$CI?$CJ@ DB '~Integer()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BHFMGKGI@Integer?3?3operator?$DN?$CIInteger?$CG?$CG?5a?$CJ@
CONST	SEGMENT
??_C@_0CA@BHFMGKGI@Integer?3?3operator?$DN?$CIInteger?$CG?$CG?5a?$CJ@ DB 'I'
	DB	'nteger::operator=(Integer&& a)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MFPFMONE@Integer?3?3operator?$DN?$CIInteger?$CG?5a?$CJ@
CONST	SEGMENT
??_C@_0BP@MFPFMONE@Integer?3?3operator?$DN?$CIInteger?$CG?5a?$CJ@ DB 'Int'
	DB	'eger::operator=(Integer& a)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LHGHPBKD@op?$CL?5?3?3?5a?5?$DN?5@
CONST	SEGMENT
??_C@_0M@LHGHPBKD@op?$CL?5?3?3?5a?5?$DN?5@ DB 'op+ :: a = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BNDBBBDF@b?5?$DN@
CONST	SEGMENT
??_C@_03BNDBBBDF@b?5?$DN@ DB 'b =', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILDALPHC@Integer?$CI?$CG?$CG?$CJ@
CONST	SEGMENT
??_C@_0M@ILDALPHC@Integer?$CI?$CG?$CG?$CJ@ DB 'Integer(&&)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PPMNOCDI@Integer?$CIint?5value?$CJ@
CONST	SEGMENT
??_C@_0BD@PPMNOCDI@Integer?$CIint?5value?$CJ@ DB 'Integer(int value)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MDJAHKMH@Integer?$CIconst?5Integer?$CG?5i?$CJ@
CONST	SEGMENT
??_C@_0BK@MDJAHKMH@Integer?$CIconst?5Integer?$CG?5i?$CJ@ DB 'Integer(cons'
	DB	't Integer& i)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09OMOCDKIG@Integer?$CI?$CJ@
CONST	SEGMENT
??_C@_09OMOCDKIG@Integer?$CI?$CJ@ DB 'Integer()', 00H	; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051811H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	03f3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'A', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	095H, 09H
	DB	02H
	DB	't'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	021bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@Integer@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BInteger@@QEAAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RInteger@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Integer@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Integer@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1Integer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Integer@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Integer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4Integer@@QEAAAEAV0@$$QEAV0@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4Integer@@QEAAAEAV0@AEBV0@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	040H
	DB	0daH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??EInteger@@QEBA?AV0@H@Z DD 025054719H
	DD	0118231dH
	DD	070110025H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??EInteger@@QEBA?AV0@H@Z$rtcName$0 DB 074H		; Integer::operator++
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??EInteger@@QEBA?AV0@H@Z$rtcVarDesc DD 028H		; Integer::operator++
	DD	08H
	DQ	FLAT:??EInteger@@QEBA?AV0@H@Z$rtcName$0
	ORG $+48
??EInteger@@QEBA?AV0@H@Z$rtcFrameData DD 01H		; Integer::operator++
	DD	00H
	DQ	FLAT:??EInteger@@QEBA?AV0@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??EInteger@@QEAAAEAV0@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??HInteger@@QEBA?AV0@AEBV0@@Z DD 025051d01H
	DD	0118231dH
	DD	070110023H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetValue@Integer@@QEAAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetValue@Integer@@QEBAHXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Integer@@QEAA@$$QEAV0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Integer@@QEAA@$$QEAV0@@Z DB 060H
	DD	imagerel $ip2state$??0Integer@@QEAA@$$QEAV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Integer@@QEAA@$$QEAV0@@Z DD 025051819H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0Integer@@QEAA@$$QEAV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Integer@@QEAA@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Integer@@QEAA@AEBV0@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Integer@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 123  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode

; 124  :             return _Ok;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+8]

; 125  :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Zero_uncaught_exceptions$ = 4
tv72 = 212
this$ = 256
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 108  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode

; 109  : #if !_HAS_EXCEPTIONS
; 110  :             const bool _Zero_uncaught_exceptions = true;
; 111  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv72[rbp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv72[rbp], 0
$LN5@sentry:
	movzx	eax, BYTE PTR tv72[rbp]
	mov	BYTE PTR _Zero_uncaught_exceptions$[rbp], al

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {

	movzx	eax, BYTE PTR _Zero_uncaught_exceptions$[rbp]
	test	eax, eax
	je	SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:

; 119  :             }
; 120  :         }

	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 91   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 92   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry

; 93   :                 _Ok = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 0

; 94   :                 return;

	jmp	$LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Tied$[rbp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

	cmp	QWORD PTR _Tied$[rbp], 0
	je	SHORT $LN4@sentry
	mov	rax, QWORD PTR _Ostr$[rbp]
	cmp	QWORD PTR _Tied$[rbp], rax
	jne	SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 1

; 100  :                 return;

	jmp	SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  :             _Tied->flush();

	mov	rcx, QWORD PTR _Tied$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 104  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+8], al
$LN1@sentry:

; 105  :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 77   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR tv72[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv72[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax

; 79   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas

; 80   :                 _Rdbuf->_Unlock();

	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 81   :             }
; 82   :         }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 70   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR [rax], rcx

; 71   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR tv73[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv73[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax

; 72   :             if (_Rdbuf) {

	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas

; 73   :                 _Rdbuf->_Lock();

	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 74   :             }
; 75   :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 224
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 974  :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode

; 975  :     _Ostr.put(_Ostr.widen('\n'));

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	dl, 10
	mov	rcx, rax
	call	QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	movzx	edx, al
	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 976  :     _Ostr.flush();

	mov	rcx, QWORD PTR _Ostr$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 977  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]

; 978  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 731  :     const char* _Val) { // insert NTBS into char stream

$LN25:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__8482205F_ostream
	call	__CheckForDebuggerJustMyCode

; 732  :     using _Elem = char;
; 733  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 734  : 
; 735  :     ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rbp], 0

; 736  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	mov	rcx, QWORD PTR _Val$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	QWORD PTR _Count$[rbp], rax

; 737  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rbp]
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rbp]
	mov	QWORD PTR tv137[rbp], rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	QWORD PTR tv137[rbp], 0
$LN18@operator:
	mov	rax, QWORD PTR tv137[rbp]
	mov	QWORD PTR _Pad$[rbp], rax

; 738  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rbp]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 739  : 
; 740  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator

; 741  :         _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 742  :     } else { // state okay, insert

	jmp	$LN9@operator
$LN8@operator:

; 743  :         _TRY_IO_BEGIN
; 744  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv139[rbp], eax
	mov	eax, DWORD PTR tv139[rbp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator

; 745  :             for (; 0 < _Pad; --_Pad) { // pad on left

	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN4@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN11@operator

; 746  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv295[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv296[rbp], rax
	movzx	edx, BYTE PTR tv295[rbp]
	mov	rcx, QWORD PTR tv296[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv297[rbp], eax
	mov	eax, DWORD PTR tv297[rbp]
	mov	DWORD PTR $T4[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rbp], eax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator

; 747  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 748  :                     break;

	jmp	SHORT $LN11@operator
$LN12@operator:

; 749  :                 }
; 750  :             }

	jmp	$LN2@operator
$LN11@operator:

; 751  :         }
; 752  : 
; 753  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	SHORT $LN13@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv298[rbp], rax
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR tv298[rbp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv299[rbp], rax
	mov	rax, QWORD PTR _Count$[rbp]
	cmp	QWORD PTR tv299[rbp], rax
	je	SHORT $LN13@operator

; 754  :             _State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN13@operator:

; 755  :         }
; 756  : 
; 757  :         if (_State == ios_base::goodbit) {

	cmp	DWORD PTR _State$[rbp], 0
	jne	$LN14@operator

; 758  :             for (; 0 < _Pad; --_Pad) { // pad on right

	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN7@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN14@operator

; 759  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv300[rbp], al
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv301[rbp], rax
	movzx	edx, BYTE PTR tv300[rbp]
	mov	rcx, QWORD PTR tv301[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv302[rbp], eax
	mov	eax, DWORD PTR tv302[rbp]
	mov	DWORD PTR $T6[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rbp], eax
	lea	rdx, QWORD PTR $T6[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator

; 760  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax

; 761  :                     break;

	jmp	SHORT $LN14@operator
$LN15@operator:

; 762  :                 }
; 763  :             }

	jmp	$LN5@operator
$LN14@operator:

; 764  :         }
; 765  : 
; 766  :         _Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 767  :         _CATCH_IO_(ios_base, _Ostr)
; 768  :     }
; 769  : 
; 770  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rbp]
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 771  :     return _Ostr;

	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR $T8[rbp], rax
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rbp]

; 772  : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 767  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv300 = 484
tv295 = 484
tv139 = 484
tv301 = 488
tv298 = 488
tv296 = 488
tv137 = 488
tv302 = 496
tv299 = 496
tv297 = 496
__$ArrayPad$ = 504
_Ostr$ = 544
_Val$ = 552
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 767  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Integer@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@Integer@@QEAAX_K@Z PROC		; Integer::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@Integer@@QEAAX_K@Z ENDP		; Integer::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??BInteger@@QEAAHXZ
_TEXT	SEGMENT
this$ = 224
??BInteger@@QEAAHXZ PROC				; Integer::operator int, COMDAT

; 97   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 98   : 	return *m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]

; 99   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??BInteger@@QEAAHXZ ENDP				; Integer::operator int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??RInteger@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
??RInteger@@QEAAXXZ PROC				; Integer::operator(), COMDAT

; 92   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 93   : 	std::cout << *m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 94   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??RInteger@@QEAAXXZ ENDP				; Integer::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??1Integer@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1Integer@@QEAA@XZ PROC				; Integer::~Integer, COMDAT

; 86   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 87   : 	std::cout << "~Integer()" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0L@MILLJKOJ@?$HOInteger?$CI?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 88   : 	delete m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	mov	edx, 4
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 89   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1Integer@@QEAA@XZ ENDP				; Integer::~Integer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??4Integer@@QEAAAEAV0@$$QEAV0@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
a$ = 264
??4Integer@@QEAAAEAV0@$$QEAV0@@Z PROC			; Integer::operator=, COMDAT

; 72   : {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 73   : 	 std::cout<<"Integer::operator=(Integer&& a)"<< std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0CA@BHFMGKGI@Integer?3?3operator?$DN?$CIInteger?$CG?$CG?5a?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 74   : 	if (this != &a)

	mov	rax, QWORD PTR a$[rbp]
	cmp	QWORD PTR this$[rbp], rax
	je	SHORT $LN2@operator

; 75   : 	{
; 76   : 		
; 77   : 		delete m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	mov	edx, 4
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete

; 78   : 		m_pInt = a.m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 79   : 		a.m_pInt = nullptr;

	mov	rax, QWORD PTR a$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@operator:

; 80   : 	}
; 81   : 	return *this;

	mov	rax, QWORD PTR this$[rbp]

; 82   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??4Integer@@QEAAAEAV0@$$QEAV0@@Z ENDP			; Integer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??4Integer@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv82 = 248
this$ = 288
a$ = 296
??4Integer@@QEAAAEAV0@AEBV0@@Z PROC			; Integer::operator=, COMDAT

; 59   : {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 60   : 	std::cout << "Integer::operator=(Integer& a)" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0BP@MFPFMONE@Integer?3?3operator?$DN?$CIInteger?$CG?5a?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 61   : 	if (this != &a)

	mov	rax, QWORD PTR a$[rbp]
	cmp	QWORD PTR this$[rbp], rax
	je	SHORT $LN2@operator

; 62   : 	{
; 63   : 		//std::cout << "before delete = "<< m_pInt<<std::endl;
; 64   : 		delete m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T1[rbp], rax
	mov	edx, 4
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete

; 65   : 		//std::cout << "after delete = " << m_pInt << std::endl;
; 66   : 		m_pInt = new int(*a.m_pInt);

	mov	ecx, 4
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	SHORT $LN4@operator
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T2[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR $T2[rbp]
	mov	QWORD PTR tv82[rbp], rax
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	QWORD PTR tv82[rbp], 0
$LN5@operator:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR tv82[rbp]
	mov	QWORD PTR [rax], rcx
$LN2@operator:

; 67   : 	}
; 68   : 	 return *this;

	mov	rax, QWORD PTR this$[rbp]

; 69   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??4Integer@@QEAAAEAV0@AEBV0@@Z ENDP			; Integer::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??EInteger@@QEBA?AV0@H@Z
_TEXT	SEGMENT
temp$ = 8
$T4 = 228
__$ArrayPad$ = 248
this$ = 288
__$ReturnUdt$ = 296
__formal$ = 304
??EInteger@@QEBA?AV0@H@Z PROC				; Integer::operator++, COMDAT

; 52   : {

$LN6:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	mov	DWORD PTR $T4[rbp], 0
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 53   : 	Integer temp(*this);

	mov	edx, 8
	lea	rcx, QWORD PTR temp$[rbp]
	call	?__autoclassinit2@Integer@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rbp]
	lea	rcx, QWORD PTR temp$[rbp]
	call	??0Integer@@QEAA@AEBV0@@Z		; Integer::Integer

; 54   : 	*m_pInt += 1; //!!! though this func is made const how it's still changing m_pInt value?

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	DWORD PTR [rcx], eax

; 55   : 	return temp;

	lea	rdx, QWORD PTR temp$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0Integer@@QEAA@$$QEAV0@@Z		; Integer::Integer
	mov	eax, DWORD PTR $T4[rbp]
	or	eax, 1
	mov	DWORD PTR $T4[rbp], eax
	lea	rcx, QWORD PTR temp$[rbp]
	call	??1Integer@@QEAA@XZ			; Integer::~Integer
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 56   : }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??EInteger@@QEBA?AV0@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??EInteger@@QEBA?AV0@H@Z ENDP				; Integer::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??EInteger@@QEAAAEAV0@XZ
_TEXT	SEGMENT
this$ = 224
??EInteger@@QEAAAEAV0@XZ PROC				; Integer::operator++, COMDAT

; 46   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 47   : 	*m_pInt += 1;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	DWORD PTR [rcx], eax

; 48   : 	return *this;

	mov	rax, QWORD PTR this$[rbp]

; 49   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??EInteger@@QEAAAEAV0@XZ ENDP				; Integer::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??HInteger@@QEBA?AV0@AEBV0@@Z
_TEXT	SEGMENT
$T1 = 196
tv78 = 216
tv72 = 224
this$ = 272
__$ReturnUdt$ = 280
a$ = 288
??HInteger@@QEBA?AV0@AEBV0@@Z PROC			; Integer::operator+, COMDAT

; 39   : {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	DWORD PTR $T1[rbp], 0
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 40   : 	std::cout << "op+ :: a = " << *m_pInt << "b =" << *a.m_pInt << std::endl;

	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv78[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv72[rbp], rcx
	lea	rdx, OFFSET FLAT:??_C@_0M@LHGHPBKD@op?$CL?5?3?3?5a?5?$DN?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv72[rbp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	lea	rdx, OFFSET FLAT:??_C@_03BNDBBBDF@b?5?$DN@
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, QWORD PTR tv78[rbp]
	mov	edx, DWORD PTR [rcx]
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 41   : 	return (*m_pInt + *a.m_pInt); // why should we need temp creatiion as this is so simple

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	eax, DWORD PTR [rax]
	add	eax, DWORD PTR [rcx]
	mov	edx, eax
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0Integer@@QEAA@H@Z			; Integer::Integer
	mov	eax, DWORD PTR $T1[rbp]
	or	eax, 1
	mov	DWORD PTR $T1[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 42   : 	//return temp;
; 43   : }

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
??HInteger@@QEBA?AV0@AEBV0@@Z ENDP			; Integer::operator+
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ?SetValue@Integer@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 224
value$ = 232
?SetValue@Integer@@QEAAXH@Z PROC			; Integer::SetValue, COMDAT

; 34   : {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 35   : 	*m_pInt = value;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, DWORD PTR value$[rbp]
	mov	DWORD PTR [rax], ecx

; 36   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?SetValue@Integer@@QEAAXH@Z ENDP			; Integer::SetValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ?GetValue@Integer@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetValue@Integer@@QEBAHXZ PROC				; Integer::GetValue, COMDAT

; 29   : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 30   : 	return *m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]

; 31   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetValue@Integer@@QEBAHXZ ENDP				; Integer::GetValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??0Integer@@QEAA@$$QEAV0@@Z
_TEXT	SEGMENT
this$ = 224
obj$ = 232
??0Integer@@QEAA@$$QEAV0@@Z PROC			; Integer::Integer, COMDAT

; 22   : {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 23   : 	std::cout << "Integer(&&)" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0M@ILDALPHC@Integer?$CI?$CG?$CG?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 24   : 	this->m_pInt = obj.m_pInt;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR obj$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 25   : 	obj.m_pInt = nullptr;

	mov	rax, QWORD PTR obj$[rbp]
	mov	QWORD PTR [rax], 0

; 26   : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0Integer@@QEAA@$$QEAV0@@Z ENDP			; Integer::Integer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??0Integer@@QEAA@H@Z
_TEXT	SEGMENT
$T1 = 200
tv76 = 216
this$ = 256
value$ = 264
??0Integer@@QEAA@H@Z PROC				; Integer::Integer, COMDAT

; 16   : {

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 17   : 	std::cout << "Integer(int value)" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0BD@PPMNOCDI@Integer?$CIint?5value?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 18   : 	m_pInt = new int(value);

	mov	ecx, 4
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T1[rbp], rax
	cmp	QWORD PTR $T1[rbp], 0
	je	SHORT $LN3@Integer
	mov	rax, QWORD PTR $T1[rbp]
	mov	ecx, DWORD PTR value$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR tv76[rbp], rax
	jmp	SHORT $LN4@Integer
$LN3@Integer:
	mov	QWORD PTR tv76[rbp], 0
$LN4@Integer:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	mov	QWORD PTR [rax], rcx

; 19   : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0Integer@@QEAA@H@Z ENDP				; Integer::Integer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??0Integer@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
$T1 = 200
tv78 = 216
this$ = 256
i$ = 264
??0Integer@@QEAA@AEBV0@@Z PROC				; Integer::Integer, COMDAT

; 10   : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 11   : 	std::cout << "Integer(const Integer& i)" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_0BK@MDJAHKMH@Integer?$CIconst?5Integer?$CG?5i?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 12   : 	m_pInt = new int(*i.m_pInt);

	mov	ecx, 4
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T1[rbp], rax
	cmp	QWORD PTR $T1[rbp], 0
	je	SHORT $LN3@Integer
	mov	rax, QWORD PTR i$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR tv78[rbp], rax
	jmp	SHORT $LN4@Integer
$LN3@Integer:
	mov	QWORD PTR tv78[rbp], 0
$LN4@Integer:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	mov	QWORD PTR [rax], rcx

; 13   : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0Integer@@QEAA@AEBV0@@Z ENDP				; Integer::Integer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ??0Integer@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
tv76 = 216
this$ = 256
??0Integer@@QEAA@XZ PROC				; Integer::Integer, COMDAT

; 4    : {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode

; 5    : 	std::cout << "Integer()" << std::endl;

	lea	rdx, OFFSET FLAT:??_C@_09OMOCDKIG@Integer?$CI?$CJ@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 6    : 	m_pInt = new int(0);

	mov	ecx, 4
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T1[rbp], rax
	cmp	QWORD PTR $T1[rbp], 0
	je	SHORT $LN3@Integer
	mov	rax, QWORD PTR $T1[rbp]
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR tv76[rbp], rax
	jmp	SHORT $LN4@Integer
$LN3@Integer:
	mov	QWORD PTR tv76[rbp], 0
$LN4@Integer:
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	mov	QWORD PTR [rax], rcx

; 7    : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0Integer@@QEAA@XZ ENDP				; Integer::Integer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 469  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48AC8EAA_xstring
	call	__CheckForDebuggerJustMyCode

; 470  :         return static_cast<int_type>(EOF);

	mov	eax, -1

; 471  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 461  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48AC8EAA_xstring
	call	__CheckForDebuggerJustMyCode

; 462  :         return _Left == _Right;

	mov	rax, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[rbp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv65[rbp]

; 463  :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 224
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 388  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48AC8EAA_xstring
	call	__CheckForDebuggerJustMyCode

; 389  :         // find length of null-terminated string
; 390  : #if _HAS_CXX17
; 391  : #ifdef __cpp_char8_t
; 392  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 393  : #if _HAS_U8_INTRINSICS
; 394  :             return __builtin_u8strlen(_First);
; 395  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 396  :             return _Primary_char_traits::length(_First);
; 397  : #endif // _HAS_U8_INTRINSICS
; 398  :         } else
; 399  : #endif // __cpp_char8_t
; 400  :         {
; 401  :             return __builtin_strlen(_First);
; 402  :         }
; 403  : #else // _HAS_CXX17
; 404  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	mov	rcx, QWORD PTR _First$[rbp]
	call	strlen

; 405  : #endif // _HAS_CXX17
; 406  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\320112313\source\repos\ModernCpp\Integer.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BD051F2B_Integer@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
